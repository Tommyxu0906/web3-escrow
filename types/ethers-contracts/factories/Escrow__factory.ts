/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Addressable } from "ethers";
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers"
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers"
import type { NonPayableOverrides } from "../common.js"
  import type { Escrow, EscrowInterface } from "../Escrow.js";

  const _abi = [
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "bytes32",
        "name": "id",
        "type": "bytes32"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "buyer",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "seller",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint64",
        "name": "deadline",
        "type": "uint64"
      }
    ],
    "name": "EscrowCreated",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "bytes32",
        "name": "id",
        "type": "bytes32"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "buyer",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      }
    ],
    "name": "FundsDeposited",
    "type": "event"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "buyer",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "seller",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      },
      {
        "internalType": "uint64",
        "name": "deadline",
        "type": "uint64"
      }
    ],
    "name": "createEscrow",
    "outputs": [
      {
        "internalType": "bytes32",
        "name": "id",
        "type": "bytes32"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "",
        "type": "bytes32"
      }
    ],
    "name": "deals",
    "outputs": [
      {
        "internalType": "address",
        "name": "buyer",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "seller",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "amount",
        "type": "uint256"
      },
      {
        "internalType": "uint64",
        "name": "deadline",
        "type": "uint64"
      },
      {
        "internalType": "enum Escrow.Status",
        "name": "status",
        "type": "uint8"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "id",
        "type": "bytes32"
      }
    ],
    "name": "deposit",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  }
] as const;

  const _bytecode = "0x6080604052348015600e575f5ffd5b50610cb58061001c5f395ff3fe608060405260043610610033575f3560e01c806381cd872a146100375780639845b71214610077578063b214faa5146100b3575b5f5ffd5b348015610042575f5ffd5b5061005d600480360381019061005891906106fc565b6100cf565b60405161006e959493929190610813565b60405180910390f35b348015610082575f5ffd5b5061009d600480360381019061009891906108e2565b61015e565b6040516100aa9190610955565b60405180910390f35b6100cd60048036038101906100c891906106fc565b6104e4565b005b5f602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806002015490806003015f9054906101000a900467ffffffffffffffff16908060030160089054906101000a900460ff16905085565b5f5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16141580156101c757505f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614155b610206576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101fd906109c8565b60405180910390fd5b5f8311610248576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023f90610a30565b60405180910390fd5b8484848442604051602001610261959493929190610a4e565b6040516020818303038152906040528051906020012090505f600281111561028c5761028b6107a0565b5b5f5f8381526020019081526020015f2060030160089054906101000a900460ff1660028111156102bf576102be6107a0565b5b146102ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f690610ae9565b60405180910390fd5b6040518060a001604052808673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018367ffffffffffffffff1681526020016001600281111561036c5761036b6107a0565b5b8152505f5f8381526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060808201518160030160086101000a81548160ff0219169083600281111561046c5761046b6107a0565b5b02179055509050508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16827f4e16ba5c82533319fa6aef79f24dc2b6e34146279954fa56f24c6e00da47452086866040516104d4929190610b07565b60405180910390a4949350505050565b5f5f5f8381526020019081526020015f2090506001600281111561050b5761050a6107a0565b5b8160030160089054906101000a900460ff16600281111561052f5761052e6107a0565b5b1461056f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056690610b78565b60405180910390fd5b805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105f690610be0565b60405180910390fd5b80600201543414610645576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063c90610c48565b60405180910390fd5b60028160030160086101000a81548160ff0219169083600281111561066d5761066c6107a0565b5b02179055503373ffffffffffffffffffffffffffffffffffffffff16827f6221f2b1a766e0a60a83a05c2ca8be3bf4b8028dbcb5b67624f5392a07372ae3346040516106b99190610c66565b60405180910390a35050565b5f5ffd5b5f819050919050565b6106db816106c9565b81146106e5575f5ffd5b50565b5f813590506106f6816106d2565b92915050565b5f60208284031215610711576107106106c5565b5b5f61071e848285016106e8565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61075082610727565b9050919050565b61076081610746565b82525050565b5f819050919050565b61077881610766565b82525050565b5f67ffffffffffffffff82169050919050565b61079a8161077e565b82525050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b600381106107de576107dd6107a0565b5b50565b5f8190506107ee826107cd565b919050565b5f6107fd826107e1565b9050919050565b61080d816107f3565b82525050565b5f60a0820190506108265f830188610757565b6108336020830187610757565b610840604083018661076f565b61084d6060830185610791565b61085a6080830184610804565b9695505050505050565b61086d81610746565b8114610877575f5ffd5b50565b5f8135905061088881610864565b92915050565b61089781610766565b81146108a1575f5ffd5b50565b5f813590506108b28161088e565b92915050565b6108c18161077e565b81146108cb575f5ffd5b50565b5f813590506108dc816108b8565b92915050565b5f5f5f5f608085870312156108fa576108f96106c5565b5b5f6109078782880161087a565b94505060206109188782880161087a565b9350506040610929878288016108a4565b925050606061093a878288016108ce565b91505092959194509250565b61094f816106c9565b82525050565b5f6020820190506109685f830184610946565b92915050565b5f82825260208201905092915050565b7f7a65726f206164647265737300000000000000000000000000000000000000005f82015250565b5f6109b2600c8361096e565b91506109bd8261097e565b602082019050919050565b5f6020820190508181035f8301526109df816109a6565b9050919050565b7f616d6f756e743d300000000000000000000000000000000000000000000000005f82015250565b5f610a1a60088361096e565b9150610a25826109e6565b602082019050919050565b5f6020820190508181035f830152610a4781610a0e565b9050919050565b5f60a082019050610a615f830188610757565b610a6e6020830187610757565b610a7b604083018661076f565b610a886060830185610791565b610a95608083018461076f565b9695505050505050565b7f657363726f7720657869737473000000000000000000000000000000000000005f82015250565b5f610ad3600d8361096e565b9150610ade82610a9f565b602082019050919050565b5f6020820190508181035f830152610b0081610ac7565b9050919050565b5f604082019050610b1a5f83018561076f565b610b276020830184610791565b9392505050565b7f62616420737461747573000000000000000000000000000000000000000000005f82015250565b5f610b62600a8361096e565b9150610b6d82610b2e565b602082019050919050565b5f6020820190508181035f830152610b8f81610b56565b9050919050565b7f6f6e6c79206275796572000000000000000000000000000000000000000000005f82015250565b5f610bca600a8361096e565b9150610bd582610b96565b602082019050919050565b5f6020820190508181035f830152610bf781610bbe565b9050919050565b7f77726f6e672076616c75650000000000000000000000000000000000000000005f82015250565b5f610c32600b8361096e565b9150610c3d82610bfe565b602082019050919050565b5f6020820190508181035f830152610c5f81610c26565b9050919050565b5f602082019050610c795f83018461076f565b9291505056fea2646970667358221220ba78ca382e32c4dfc96483acf06526b0ec09887a33e9c1a776b2de737d4235ed64736f6c634300081c0033";

  
      type EscrowConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

      const isSuperArgs = (xs: EscrowConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
        xs.length > 1
    

  export class Escrow__factory extends ContractFactory {
    
      constructor(...args: EscrowConstructorParams) {
        if (isSuperArgs(args)) {
          super(...args);
        } else {
          super(_abi, _bytecode, args[0]);
        }
        
      }
    
    override getDeployTransaction(overrides?: NonPayableOverrides & { from?: string }): Promise<ContractDeployTransaction> {
      return super.getDeployTransaction(overrides || {});
    };
    override deploy(overrides?: NonPayableOverrides & { from?: string }) {
      return super.deploy(overrides || {}) as Promise<Escrow & {
        deploymentTransaction(): ContractTransactionResponse;
      }>;
    }
    override connect(runner: ContractRunner | null): Escrow__factory {
      return super.connect(runner) as Escrow__factory;
    }
    
    
    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): EscrowInterface {
      return new Interface(_abi) as EscrowInterface;
    }
    
    override attach(address: string | Addressable): Escrow {
      return super.attach(address) as Escrow;
    }
  static connect(address: string, runner?: ContractRunner | null): Escrow {
      return new Contract(address, _abi, runner) as unknown as Escrow;
    }
  }

  
  